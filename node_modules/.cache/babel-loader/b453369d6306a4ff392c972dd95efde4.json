{"ast":null,"code":"import{routerReducer}from'react-router-redux';import{withReduxStateSync}from'redux-state-sync';import{combineReducers}from\"redux\";import employeesReducer from\"./employees\";var allReducers=combineReducers({employeesReducer:employeesReducer,routerReducer:routerReducer});var rootReducer=function rootReducer(state,action){// when a logout action is dispatched it will reset redux state\n/*if (action.type === 'USER_LOGGED_OUT') {\r\n    //localStorage.removeItem('user')\r\n    state = undefined;\r\n  }*/return allReducers(state,action);};//export default rootReducer;\nexport default withReduxStateSync(rootReducer);//export default allReducers","map":{"version":3,"names":["routerReducer","withReduxStateSync","combineReducers","employeesReducer","allReducers","rootReducer","state","action"],"sources":["D:/OpenClassRooms/p14 github pages/src/reducers/index.jsx"],"sourcesContent":["import { routerReducer } from 'react-router-redux';\r\nimport { withReduxStateSync } from 'redux-state-sync';\r\nimport { combineReducers } from \"redux\";\r\nimport employeesReducer from \"./employees\";\r\n\r\nconst allReducers = combineReducers({\r\n  employeesReducer: employeesReducer,\r\n  routerReducer: routerReducer\r\n})\r\nconst rootReducer = (state, action) => {\r\n  // when a logout action is dispatched it will reset redux state\r\n  /*if (action.type === 'USER_LOGGED_OUT') {\r\n    //localStorage.removeItem('user')\r\n    state = undefined;\r\n  }*/\r\n  return allReducers(state, action);\r\n};\r\n\r\n//export default rootReducer;\r\nexport default withReduxStateSync(rootReducer);\r\n//export default allReducers"],"mappings":"AAAA,OAASA,aAAT,KAA8B,oBAA9B,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,MAAOC,iBAAP,KAA6B,aAA7B,CAEA,GAAMC,YAAW,CAAGF,eAAe,CAAC,CAClCC,gBAAgB,CAAEA,gBADgB,CAElCH,aAAa,CAAEA,aAFmB,CAAD,CAAnC,CAIA,GAAMK,YAAW,CAAG,QAAdA,YAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC;AACA;AACF;AACA;AACA,KACE,MAAOH,YAAW,CAACE,KAAD,CAAQC,MAAR,CAAlB,CACD,CAPD,CASA;AACA,cAAeN,mBAAkB,CAACI,WAAD,CAAjC,CACA"},"metadata":{},"sourceType":"module"}